% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_seasonal_photo.R
\name{fit_seasonal_photo}
\alias{fit_seasonal_photo}
\title{Fit seasonal photoperiod curve}
\usage{
fit_seasonal_photo(
  df = NULL,
  location = NULL,
  lat = NULL,
  years = NULL,
  funcs = c("sin1", "sin2"),
  custom = NULL,
  plot = FALSE
)
}
\arguments{
\item{df}{Optional data frame with columns \code{date} and \code{photoperiod_hours}.
If omitted, you must provide \code{location} or \code{lat} and \code{years}.}

\item{location}{Optional character key understood by \code{photoperiod_year()} (e.g. "St John's").}

\item{lat}{Optional numeric latitude in decimal degrees (used if \code{location} is NULL).}

\item{years}{Integer vector of years to generate and average (default: last two completed years).}

\item{funcs}{Character vector of built-in models to fit. Options:
\itemize{
\item "sin1": a + b1 * sin(2\emph{pi}t/365) + b2 * cos(2\emph{pi}t/365)
\item "sin2": T0 * (1 + T1 * cos(2\emph{pi}(omega*t + theta)/365))
}}

\item{custom}{Named list of user models. Each element: \verb{list(formula = <nls-formula>, start = <named list>)}.
The formula must use \code{avg_photo} (lhs) and \code{day_of_year} (rhs) defined inside this function.
Example:
\code{custom = list(cos1 = list( formula = avg_photo ~ a + b * cos(2*pi*day_of_year/365), start   = list(a = 12, b = 6)))}}

\item{plot}{Logical; if TRUE, include a ggplot overlay of observed vs. fitted.}
}
\value{
A list with:
\describe{
\item{daily_avg}{tibble of \code{day_of_year}, observed \code{avg_photo},
and one column per fitted model (\verb{fitted_<name>}).}
\item{fits}{list of \code{nls} fit objects (only those that converged).}
\item{metrics}{tibble with \code{model}, \code{AIC}, and \code{R2}.}
\item{plot}{ggplot object (present when \code{plot = TRUE}).}
}
}
\description{
Fits sinusoidal/periodic models to the mean daily photoperiod cycle
(averaged across years). Supports built-ins ("sin1","sin2") and user-defined
\code{nls()} models.
}
\details{
You can supply a data frame with columns \code{date} and \code{photoperiod_hours},
or let the function generate photoperiod using \code{photoperiod_year()} by
specifying \code{location} (preferred) or \code{lat} and the \code{years} to average over.

Data are aggregated to day-of-year means across all years, then each model is
fit with \code{nls()}. R^2 is computed as 1 - SS_res/SS_tot on the aggregated series.
}
\examples{
# Example 1: from shipped data (if you have photoperiod column)
# df <- data.frame(date = as.Date('2020-01-01') + 0:729,
#                  photoperiod_hours = 12 + 6*cos(2*pi*(1:730)/365) + rnorm(730,0,0.1))
# res <- fit_seasonal_photo(df = df, funcs = c("sin1","sin2"), plot = TRUE)
# res$metrics

# Example 2: generate via location for two years and add a custom model
# res2 <- fit_seasonal_photo(
#   location = "St John's",
#   years = c(2023, 2024),
#   funcs = "sin1",
#   custom = list(
#     cos1 = list(
#       formula = avg_photo ~ a + b * cos(2*pi*day_of_year/365),
#       start   = list(a = 12, b = 6)
#     )
#   ),
#   plot = TRUE
# )
# res2$metrics

}
